AWSTemplateFormatVersion: "2010-09-09"

Description: Create API Gateway

Parameters:

Resources:
  


  	# v1ApiResource:
	# 	Type: "AWS::ApiGateway::Resource"
	# 	Properties: 
	# 		RestApiId: 
	# 		  Ref: "retentionApi"
	# 		ParentId:
	# 		  Fn::GetAtt: 
	# 			- "retentionApi"
	# 			- "RootResourceId"
	# 		PathPart: "v1"

# "LambdaPermission": {
#   "Type": "AWS::Lambda::Permission",
#   "Properties": {
#     "Action": "lambda:invokeFunction",
#     "FunctionName": {"Fn::GetAtt": ["GreetingLambda", "Arn"]},
#     "Principal": "apigateway.amazonaws.com",
#     "SourceArn": {"Fn::Join": ["", 
#       ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "GreetingApi"}, "/*"]
#     ]}
#   }
# }

# "GreetingApiStage": {
#   "DependsOn" : ["ApiGatewayAccount"],
#   "Type": "AWS::ApiGateway::Stage",
#   "Properties": {
#     "DeploymentId": {"Ref": "ApiDeployment"},
#     "MethodSettings": [{
#       "DataTraceEnabled": true,
#       "HttpMethod": "*",
#       "LoggingLevel": "INFO",
#       "ResourcePath": "/*"
#     }],
#     "RestApiId": {"Ref": "GreetingApi"},
#     "StageName": "LATEST"
#   }
# }

# "ApiGatewayCloudWatchLogsRole": {
#   "Type": "AWS::IAM::Role",
#   "Properties": {
#     "AssumeRolePolicyDocument": {
#       "Version": "2012-10-17",
#       "Statement": [{
#         "Effect": "Allow",
#         "Principal": { "Service": ["apigateway.amazonaws.com"] },
#         "Action": ["sts:AssumeRole"]
#       }]
#     },
#     "Policies": [{
#       "PolicyName": "ApiGatewayLogsPolicy",
#       "PolicyDocument": {
#         "Version": "2012-10-17",
#         "Statement": [{
#           "Effect": "Allow",
#           "Action": [
#             "logs:CreateLogGroup",
#             "logs:CreateLogStream",
#             "logs:DescribeLogGroups",
#             "logs:DescribeLogStreams",
#             "logs:PutLogEvents",
#             "logs:GetLogEvents",
#             "logs:FilterLogEvents"
#           ],
#           "Resource": "*"
#         }]
#       }
#     }]
#   }
# }

# "ApiGatewayAccount": {
#   "Type" : "AWS::ApiGateway::Account",
#   "Properties" : {
#     "CloudWatchRoleArn" : {"Fn::GetAtt" : ["ApiGatewayCloudWatchLogsRole", "Arn"] }
#   }
# }

# "GreetingRequest": {
#   "DependsOn": "LambdaPermission",
#   "Type": "AWS::ApiGateway::Method",
#   "Properties": {
#     "AuthorizationType": "NONE",
#     "HttpMethod": "GET",
#     "Integration": {
#       "Type": "AWS",
#       "IntegrationHttpMethod": "POST",
#       "Uri": {"Fn::Join" : ["", 
#         ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["GreetingLambda", "Arn"]}, "/invocations"]
#       ]},
#       "IntegrationResponses": [{
#         "StatusCode": 200
#       }],
#       "RequestTemplates": {
#         "application/json": {"Fn::Join" : ["", [
#           "{",
#             "\"name\": \"$input.params('name')\"",
#           "}"
#         ]]}
#       }
#     },
#     "RequestParameters": {
#       "method.request.querystring.name": false
#     },
#     "ResourceId": {"Ref": "GreetingResource"},
#     "RestApiId": {"Ref": "GreetingApi"},
#     "MethodResponses": [{
#       "StatusCode": 200
#     }]
#   }
# }

#API KEY
#seema-things-ive-done
#			b734dY105d6HN3mIN7Vwz7nFcau9z0tR2jOtsDLk